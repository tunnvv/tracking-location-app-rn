{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction UseHooks() {\n  var _useState = useState({\n      count: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    orderCount = _useState2[0],\n    setCount = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    routerCoords = _useState4[0],\n    setRouteCoordinates = _useState4[1];\n  var _useState5 = useState(Date.now() / 1000),\n    _useState6 = _slicedToArray(_useState5, 2),\n    currentSeconds = _useState6[0],\n    setCurrentSeconds = _useState6[1];\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    distanceTimed = _useState8[0],\n    setDistanceTimed = _useState8[1];\n  var _useState9 = useState([]),\n    _useState10 = _slicedToArray(_useState9, 2),\n    routerTimes = _useState10[0],\n    setRouterTimes = _useState10[1];\n  var _useState11 = useState(null),\n    _useState12 = _slicedToArray(_useState11, 2),\n    prevSecond = _useState12[0],\n    setPrevSecond = _useState12[1];\n  var calculateTimed = function () {\n    var _ref = _asyncToGenerator(function* () {\n      return currentSeconds - previousSecond;\n    });\n    return function calculateTimed() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    console.log(\"================================\");\n    console.log(\"useEffect called\");\n  }, []);\n  return _jsxs(View, {\n    style: {\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flex: 1,\n      backgroundColor: \"purple\"\n    },\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 24\n      },\n      children: orderCount.count\n    }), _jsx(TouchableOpacity, {\n      onPress: fetchData,\n      style: {\n        width: 100,\n        height: 100,\n        backgroundColor: \"red\"\n      }\n    })]\n  });\n}\nexport default UseHooks;","map":{"version":3,"names":["React","useState","useEffect","useRef","UseHooks","count","orderCount","setCount","routerCoords","setRouteCoordinates","Date","now","currentSeconds","setCurrentSeconds","distanceTimed","setDistanceTimed","routerTimes","setRouterTimes","prevSecond","setPrevSecond","calculateTimed","previousSecond","console","log","justifyContent","alignItems","flex","backgroundColor","fontSize","fetchData","width","height"],"sources":["/home/tunv/Desktop/Web-App/tracking-location-app-rn/src/screens/UseHooks.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { View, Text, TouchableOpacity } from \"react-native\";\n\nfunction UseHooks() {\n\tconst [orderCount, setCount] = useState({ count: 0 });\n\n\tconst [routerCoords, setRouteCoordinates] = useState([]);\n\n\tconst [currentSeconds, setCurrentSeconds] = useState(Date.now() / 1000);\n\tconst [distanceTimed, setDistanceTimed] = useState(0);\n\tconst [routerTimes, setRouterTimes] = useState([]);\n\tconst [prevSecond, setPrevSecond] = useState(null);\n\n\tconst calculateTimed = async () => {\n\t\treturn currentSeconds - previousSecond;\n\t};\n\n\tuseEffect(() => {\n\t\tconsole.log(\"================================\");\n\t\tconsole.log(\"useEffect called\");\n\t}, []);\n\n\treturn (\n\t\t<View\n\t\t\tstyle={{\n\t\t\t\tjustifyContent: \"center\",\n\t\t\t\talignItems: \"center\",\n\t\t\t\tflex: 1,\n\t\t\t\tbackgroundColor: \"purple\",\n\t\t\t}}\n\t\t>\n\t\t\t<Text style={{ fontSize: 24 }}>{orderCount.count}</Text>\n\t\t\t<TouchableOpacity\n\t\t\t\tonPress={fetchData}\n\t\t\t\tstyle={{ width: 100, height: 100, backgroundColor: \"red\" }}\n\t\t\t/>\n\t\t</View>\n\t);\n}\nexport default UseHooks;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAG3D,SAASC,QAAQ,GAAG;EACnB,gBAA+BH,QAAQ,CAAC;MAAEI,KAAK,EAAE;IAAE,CAAC,CAAC;IAAA;IAA9CC,UAAU;IAAEC,QAAQ;EAE3B,iBAA4CN,QAAQ,CAAC,EAAE,CAAC;IAAA;IAAjDO,YAAY;IAAEC,mBAAmB;EAExC,iBAA4CR,QAAQ,CAACS,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,CAAC;IAAA;IAAhEC,cAAc;IAAEC,iBAAiB;EACxC,iBAA0CZ,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA9Ca,aAAa;IAAEC,gBAAgB;EACtC,iBAAsCd,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA3Ce,WAAW;IAAEC,cAAc;EAClC,kBAAoChB,QAAQ,CAAC,IAAI,CAAC;IAAA;IAA3CiB,UAAU;IAAEC,aAAa;EAEhC,IAAMC,cAAc;IAAA,6BAAG,aAAY;MAClC,OAAOR,cAAc,GAAGS,cAAc;IACvC,CAAC;IAAA,gBAFKD,cAAc;MAAA;IAAA;EAAA,GAEnB;EAEDlB,SAAS,CAAC,YAAM;IACfoB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/CD,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,OACC,MAAC,IAAI;IACJ,KAAK,EAAE;MACNC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,IAAI,EAAE,CAAC;MACPC,eAAe,EAAE;IAClB,CAAE;IAAA,WAEF,KAAC,IAAI;MAAC,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAG,CAAE;MAAA,UAAEtB,UAAU,CAACD;IAAK,EAAQ,EACxD,KAAC,gBAAgB;MAChB,OAAO,EAAEwB,SAAU;MACnB,KAAK,EAAE;QAAEC,KAAK,EAAE,GAAG;QAAEC,MAAM,EAAE,GAAG;QAAEJ,eAAe,EAAE;MAAM;IAAE,EAC1D;EAAA,EACI;AAET;AACA,eAAevB,QAAQ"},"metadata":{},"sourceType":"module"}