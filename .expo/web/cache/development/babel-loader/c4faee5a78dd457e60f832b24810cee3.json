{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Icon } from \"@expo/vector-icons/FontAwesome5\";\nimport { colors, icons, fontSizes, images, keys } from \"../constants\";\nimport { UIButton } from \"../components\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Welcome(props) {\n  var _useState = useState([{\n      name: \"Admin\",\n      isSelected: true\n    }, {\n      name: \"User\",\n      isSelected: false\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    accountTypes = _useState2[0],\n    setAccountTypes = _useState2[1];\n  return _jsx(View, {\n    style: {\n      flex: 100\n    },\n    children: _jsxs(ImageBackground, {\n      source: images.background,\n      style: {\n        flex: 100\n      },\n      resizeMode: \"cover\",\n      children: [_jsx(View, {\n        style: {\n          height: 33\n        }\n      }), _jsxs(View, {\n        style: {\n          flex: 20,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            marginBottom: 10,\n            color: \"white\",\n            fontSize: fontSizes.h5\n          },\n          children: \"Welcome to\"\n        }), _jsx(Text, {\n          style: {\n            marginBottom: 10,\n            color: \"white\",\n            fontWeight: \"bold\",\n            fontSize: fontSizes.h5\n          },\n          children: \"YOURCOMPANY.CO !\"\n        }), _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontSize: fontSizes.h5\n          },\n          children: \"Please select your account type\"\n        })]\n      }), _jsx(View, {\n        style: {\n          flex: 40\n        },\n        children: accountTypes.map(function (accountType) {\n          return _jsx(UIButton, {\n            onPress: function onPress() {\n              var newAccountTypes = accountTypes.map(function (eachAccountType) {\n                return _objectSpread(_objectSpread({}, eachAccountType), {}, {\n                  isSelected: eachAccountType.name == accountType.name\n                });\n              });\n              setAccountTypes(newAccountTypes);\n            }\n          });\n        })\n      }), _jsxs(View, {\n        style: {\n          flex: 20\n        },\n        children: [_jsx(UIButton, {\n          title: \"Login\"\n        }), _jsx(Text, {\n          style: {\n            color: \"white\",\n            fontSize: fontSizes.h5,\n            alignSelf: \"center\"\n          },\n          children: \"Want to register a new account?\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {},\n          style: {\n            padding: 8,\n            marginHorizontal: 90\n          },\n          children: _jsx(Text, {\n            style: {\n              color: colors.primary,\n              fontSize: fontSizes.h5,\n              textDecorationLine: \"underline\",\n              alignSelf: \"center\"\n            },\n            children: \"Register\"\n          })\n        })]\n      })]\n    })\n  });\n}\nexport default Welcome;","map":{"version":3,"names":["React","useState","useEffect","Icon","colors","icons","fontSizes","images","keys","UIButton","Welcome","props","name","isSelected","accountTypes","setAccountTypes","flex","background","height","justifyContent","alignItems","marginBottom","color","fontSize","h5","fontWeight","map","accountType","newAccountTypes","eachAccountType","alignSelf","padding","marginHorizontal","primary","textDecorationLine"],"sources":["/home/tunv/Desktop/Web-App/tracking-location-app-rn/src/screens/WelcomeScreen.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tText,\n\tView,\n\tImage,\n\tImageBackground,\n\tTouchableOpacity,\n} from \"react-native\";\nimport { Icon } from \"react-native-vector-icons/FontAwesome5\";\n\nimport { colors, icons, fontSizes, images, keys } from \"../constants\";\nimport { UIButton } from \"../components\";\n\nfunction Welcome(props) {\n\tconst [accountTypes, setAccountTypes] = useState([\n\t\t{\n\t\t\tname: \"Admin\",\n\t\t\tisSelected: true,\n\t\t},\n\t\t{\n\t\t\tname: \"User\",\n\t\t\tisSelected: false,\n\t\t},\n\t]);\n\n\t// return <View style={{ flex: 100, backgroundColor: \"red\" }}>\n\t// </View>;\n\treturn (\n\t\t<View style={{ flex: 100 }}>\n\t\t\t<ImageBackground\n\t\t\t\tsource={images.background}\n\t\t\t\tstyle={{ flex: 100 }}\n\t\t\t\tresizeMode=\"cover\"\n\t\t\t>\n\t\t\t\t<View style={{ height: 33 }}></View>\n\t\t\t\t{/* <View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\t// backgroundColor: \"red\",\n\t\t\t\t\t\tflex: 20,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\t\theight: 50,\n\t\t\t\t\t\t\tjustifyContent: \"flex-start\",\n\t\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\tsource={icons.fire}\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\twidth: 30,\n\t\t\t\t\t\t\t\theight: 30,\n\t\t\t\t\t\t\t\tmarginStart: 10,\n\t\t\t\t\t\t\t\tmarginEnd: 5,\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Text style={{ color: \"white\", fontSize: fontSizes.h5 }}>\n\t\t\t\t\t\t\tYOURCOMPANY.CO\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<View style={{ flex: 1 }} />\n\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\tname={\"question-circle\"}\n\t\t\t\t\t\t\tcolor={\"white\"}\n\t\t\t\t\t\t\tsize={20}\n\t\t\t\t\t\t\tstyle={{ marginEnd: 20 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</View>\n\t\t\t\t</View> */}\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 20,\n\t\t\t\t\t\t// backgroundColor: \"purple\",\n\t\t\t\t\t\tjustifyContent: \"center\",\n\t\t\t\t\t\talignItems: \"center\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginBottom: 10,\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\tfontSize: fontSizes.h5,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tWelcome to\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginBottom: 10,\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\tfontWeight: \"bold\",\n\t\t\t\t\t\t\tfontSize: fontSizes.h5,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tYOURCOMPANY.CO !\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\tfontSize: fontSizes.h5,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tPlease select your account type\n\t\t\t\t\t</Text>\n\t\t\t\t</View>\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 40,\n\t\t\t\t\t\t// backgroundColor: \"purple\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{accountTypes.map((accountType) => (\n\t\t\t\t\t\t<UIButton\n\t\t\t\t\t\t\tonPress={() => {\n\t\t\t\t\t\t\t\tlet newAccountTypes = accountTypes.map((eachAccountType) => {\n\t\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\t\t...eachAccountType,\n\t\t\t\t\t\t\t\t\t\tisSelected: eachAccountType.name == accountType.name,\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t// accountTypes = newAccountTypes; => DONOT DO THIS\n\t\t\t\t\t\t\t\t// reset each element of acountTypes to following newAccountTypes and reload UI\n\t\t\t\t\t\t\t\tsetAccountTypes(newAccountTypes);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t// title={accountType.name}\n\t\t\t\t\t\t\t// isSelected={accountType.isSelected}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t</View>\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tflex: 20,\n\t\t\t\t\t\t// backgroundColor: \"green\",\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<UIButton title={\"Login\"}></UIButton>\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: \"white\",\n\t\t\t\t\t\t\tfontSize: fontSizes.h5,\n\t\t\t\t\t\t\talignSelf: \"center\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\tWant to register a new account?\n\t\t\t\t\t</Text>\n\t\t\t\t\t<TouchableOpacity\n\t\t\t\t\t\tonPress={() => {}}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t// backgroundColor: \"red\",\n\t\t\t\t\t\t\tpadding: 8,\n\t\t\t\t\t\t\tmarginHorizontal: 90,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tcolor: colors.primary,\n\t\t\t\t\t\t\t\tfontSize: fontSizes.h5,\n\t\t\t\t\t\t\t\ttextDecorationLine: \"underline\",\n\t\t\t\t\t\t\t\talignSelf: \"center\",\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t</TouchableOpacity>\n\t\t\t\t</View>\n\t\t\t</ImageBackground>\n\t\t</View>\n\t);\n}\n\nexport default Welcome;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}